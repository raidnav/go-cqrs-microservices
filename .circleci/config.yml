version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.8
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: raidnav
          POSTGRES_DB: integration_services
    working_directory: /go/src/github.com/raidnav/go-cqrs-microservices

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS

      - restore_cache:
          keys:
            - v1-pkg-cache
      - run: go get github.com/lib/pq
      - run: go get github.com/mattes/migrate
      - run: go get github.com/jstemmer/go-junit-report
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

      - run:
          name: Run unit tests
          environment:
            CONTACTS_DB_URL: "postgres://raidnav@localhost:5432/integration_services?sslmode=disable"
            CONTACTS_DB_MIGRATIONS: /go/src/github.com/raidnav/go-cqrs-microservices/postgres/up
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make test | tee ${TEST_RESULTS}/go-test.out

      - run: make

      - save_cache:
          key: v1-pkg-cache
          paths:
            - "/go/pkg"

      - run:
          name: Start service
          environment:
            CONTACTS_DB_URL: "postgres://raidnav@localhost:5432/integration_services?sslmode=disable"
            CONTACTS_DB_MIGRATIONS: /go/src/github.com/raidnav/go-cqrs-microservices/postgres/up
          command: ./workdir/up
          background: true

      - run:
          name: Validate service is working
          command: |
            sleep 5
            curl --retry 10 --retry-delay 1 -X POST --header "Content-Type: application/json" -d '{"email":"test@example.com","name":"Test User"}' http://localhost:8080/contacts

      - store_artifacts: #
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results
